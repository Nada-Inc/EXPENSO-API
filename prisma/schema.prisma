// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Schema to store User
model User {
  id                  Int                   @id @default(autoincrement())
  userName            String
  password            String
  email               String                @unique
  phoneNumber         String
  currency            String
  country             String
  subscriptionType    String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  lastLogin           DateTime?
  status              Boolean               @default(true)
  fixedIncomeItems    FixedIncomeItem[]
  FixedExpenseItem    FixedExpenseItem[]
  ExpenseItem         ExpenseItem[]
  VariableExpenseItem VariableExpenseItem[]
  Summary             Summary[]
  BankAccount         BankAccount[]

  @@index([email])
}

// Income Schema
// Fixed Income Item
model FixedIncomeItem {
  id              Int           @id @default(autoincrement())
  incomeName      String
  userId          Int // This references the User model's id
  user            User          @relation(fields: [userId], references: [id])
  amount          Decimal
  creditedDay     Int           @default(1)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  fixedIncomeItem FixedIncome[]

  @@index([userId])
}

// FixedIncome
model FixedIncome {
  id          Int      @id @default(autoincrement())
  fixIncomeId Int
  amount      Float
  date        DateTime
  updatedAt   DateTime @default(now()) @updatedAt

  // Define the relation to FixedIncomeItem model
  fixedIncomeItem FixedIncomeItem @relation(fields: [fixIncomeId], references: [id])

  @@index([fixIncomeId])
}

// Expense
// Expense Item
model FixedExpenseItem {
  id          Int      @id @default(autoincrement())
  expenseName String
  amount      Decimal
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  creditedDay Int      @default(1)
  userId      Int
  user        User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

// Expense
// Expense Item
model ExpenseItem {
  id           Int      @id @default(autoincrement())
  varExpenseId Int
  amount       Decimal
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       Int
  user         User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

// Variable Expense Item
model VariableExpenseItem {
  id          Int      @id @default(autoincrement())
  expenseName String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

// Summary
model Summary {
  id              Int      @id @default(autoincrement())
  fixExpenseTotal Float
  varExpenseTotal Float
  fixIncomeTotal  Float
  varIncomeTotal  Float
  updatedAt       DateTime @updatedAt
  createdAt       DateTime @default(now())
  userId          Int
  user            User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

// Bank Account
model BankAccount {
  id             Int      @id @default(autoincrement())
  accountName    String
  isPrimary      String
  accountBalance String
  updatedAt      DateTime @updatedAt
  createdAt      DateTime @default(now())
  userId         Int
  user           User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model TestTable {
  id   Int    @id @default(autoincrement())
  name String
  age  Int?
}
